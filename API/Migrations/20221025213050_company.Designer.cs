// <auto-generated />
using EStore.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EStore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221025213050_company")]
    partial class company
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EStore.Data.Models.company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("company");
                });

            modelBuilder.Entity("EStore.Data.Models.item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Company_Id")
                        .HasColumnType("int");

                    b.Property<int>("Is_Active")
                        .HasColumnType("int");

                    b.Property<string>("Main_Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Main_Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Short_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Short_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Company_Id");

                    b.ToTable("ITEMS");
                });

            modelBuilder.Entity("EStore.Data.Models.item_Details", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Item_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ITEM_DETAILS");
                });

            modelBuilder.Entity("EStore.Data.Models.item_Photoes", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Item_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ITEM_PHOTOES");
                });

            modelBuilder.Entity("EStore.Data.Models.item", b =>
                {
                    b.HasOne("EStore.Data.Models.company", "Company")
                        .WithMany("items")
                        .HasForeignKey("Company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("EStore.Data.Models.item_Details", b =>
                {
                    b.HasOne("EStore.Data.Models.item", "item")
                        .WithOne("item_Details")
                        .HasForeignKey("EStore.Data.Models.item_Details", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("item");
                });

            modelBuilder.Entity("EStore.Data.Models.item_Photoes", b =>
                {
                    b.HasOne("EStore.Data.Models.item", "item")
                        .WithOne("item_Photoes")
                        .HasForeignKey("EStore.Data.Models.item_Photoes", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("item");
                });

            modelBuilder.Entity("EStore.Data.Models.company", b =>
                {
                    b.Navigation("items");
                });

            modelBuilder.Entity("EStore.Data.Models.item", b =>
                {
                    b.Navigation("item_Details");

                    b.Navigation("item_Photoes");
                });
#pragma warning restore 612, 618
        }
    }
}
